---
name: Release

on:
  push:
    branches:
      - master
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        yq-variant: [go-yq, python-yq]

    name: Tests (${{ matrix.yq-variant }})

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install BATS
        run: |
          sudo apt-get update
          sudo apt-get install -y bats

      - name: Install Go-yq
        if: matrix.yq-variant == 'go-yq'
        run: |
          sudo wget -qO /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Install Python-yq
        if: matrix.yq-variant == 'python-yq'
        run: |
          sudo apt-get install -y python3-pip
          pip3 install yq
          yq --version

      - name: Install jq (required for Python-yq)
        if: matrix.yq-variant == 'python-yq'
        run: |
          sudo apt-get install -y jq
          jq --version

      - name: Run tests
        run: |
          echo "Testing with ${{ matrix.yq-variant }}"
          ./tests/run_tests.sh

  lint:
    runs-on: ubuntu-latest
    name: Lint & Style Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run shellcheck on main script
        run: |
          shellcheck bin/vpnctl

      - name: Run shellcheck on test scripts
        run: |
          shellcheck tests/*.sh

  release:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install -g semantic-release @semantic-release/changelog @semantic-release/git


      - name: Create checksums for release assets
        run: |
          mkdir -p release-assets
          cp bin/vpnctl scripts/install.sh scripts/uninstall.sh README.md CHANGELOG.md release-assets/
          cd release-assets
          sha256sum * > checksums.txt

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Upload release artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: release-assets/
          retention-days: 30